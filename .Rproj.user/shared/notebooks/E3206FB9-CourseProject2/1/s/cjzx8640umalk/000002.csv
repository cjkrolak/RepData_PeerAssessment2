"0","propDamageFiltered <- function(val, exp) {"
"0","    returnVal <- val  # default"
"0","    if (exp==""K"") {"
"0","        returnVal <- val * 1000"
"0","    }"
"0","    else if (exp ==""M"" | exp ==""m"") {"
"0","        returnVal <- val * 1000000"
"0","    }"
"0","    else if (exp == ""B"") {"
"0","        returnVal <- val * 1000000000"
"0","    }"
"0","    returnVal"
"0","}"
"0","# 1. Code for reading in the dataset and/or processing the data"
"0","library(utils)"
"0","# read in data"
"0","# 10. Does the analysis start from the raw data file (i.e. the original .csv.bz2 file)?"
"0","print(""reading in raw data..."")"
"1","[1]"
"1"," ""reading in raw data..."""
"1","
"
"0","#df <- read.csv("".\\repdata_data_StormData.csv.bz2"", na.strings = NA)"
"0","print(""done reading in raw data."")"
"1","[1]"
"1"," ""done reading in raw data."""
"1","
"
"0","# transform data"
"0","df$InjuriesPlusFatalities <- df$FATALITIES + df$INJURIES"
"0","df$logInjuriesPlusFatalities <- log(df$InjuriesPlusFatalities + 1)"
"0","df$logFatalities <- log(df$FATALITIES + 1)"
"0","df$logInjuries <- log(df$INJURIES + 1)"
"0","df$propDamageFiltered <- propDamageFiltered(df$PROPDMG, df$PROPDMGEXP)"
"2","the condition has length > 1 and only the first element will be used"
"0","df$logPropDamageFiltered <- log(df$propDamageFiltered)"
